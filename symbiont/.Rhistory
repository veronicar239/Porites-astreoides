#cat.dist = c(0.055, 0.055, 0.055, 0.055, 0.055),
main = "",
scaled = FALSE)
#cat.pos = c(0, 0),
venn.diagram(x = list(LO_LC.down$gene, OO_LO.down$gene, OO_OC.down$gene),
category.names = c("Lagoon-Ojo vs Lagoon-Control", "Ojo-Ojo vs Lagoon-Ojo", "Ojo-Ojo vs Ojo-Control"),
filename = 'Past_sym_venn_down_3way_labels.png',
output = TRUE,
imagetype="png",
height = 2500,
width = 6000,
resolution = 300,
fill=c("cadetblue2", "darkseagreen2", "coral1"), #, "goldenrod"
main.cex = 1.5,
sub.cex = 1.5,
cat.cex = 1.5,
cex = 1.5,
cat.default.pos = "outer",
#cat.pos = c(-27, 27, 135, 135, 27),
#cat.dist = c(0.055, 0.055, 0.055, 0.055, 0.055),
main = "",
scaled = FALSE)
#cat.pos = c(0, 0),
venn.diagram(x = list(OO_LO.down$gene, OO_OC.down$gene),
category.names = c("Ojo-Ojo vs Lagoon-Ojo", "Ojo-Ojo vs Ojo-Control"),
filename = 'Past_sym_venn_down_2-way.png',
output = TRUE,
imagetype="png",
height = 2500,
width = 6000,
resolution = 300,
fill=c("darkseagreen2", "coral1"), #, "goldenrod"
main.cex = 1.5,
sub.cex = 1.5,
cat.cex = 1.5,
cex = 1.5,
cat.default.pos = "outer",
#cat.pos = c(-27, 27, 135, 135, 27),
#cat.dist = c(0.055, 0.055, 0.055, 0.055, 0.055),
main = "",
scaled = FALSE)
#cat.pos = c(0, 0),
venn.diagram(x = list(OO_LO.up$gene, OO_OC.up$gene),
category.names = c("", ""), #"Ojo-Ojo vs Lagoon-Ojo", "Ojo-Ojo vs Ojo-Control"
filename = 'Past_sym_venn_up_2-way_noLabel.png',
output = TRUE,
imagetype="png",
height = 2500,
width = 3000,
resolution = 300,
fill=c("darkseagreen2", "coral1"), #, "goldenrod" "darkseagreen2",
main.cex = 1.5,
sub.cex = 1.5,
cat.cex = 1.5,
cex = 1.5,
cat.default.pos = "outer",
#cat.pos = c(-27, 27, 135, 135, 27),
#cat.dist = c(0.055, 0.055, 0.055, 0.055, 0.055),
main = "",
scaled = FALSE)
#cat.pos = c(0, 0),
View(de.genes_LO_LC)
venn.diagram(x = list(OO_LO.down$gene, OO_OC.down$gene),
category.names = c("Ojo-Ojo vs Lagoon-Ojo", "Ojo-Ojo vs Ojo-Control"),
filename = 'Past_sym_venn_down_2-way.png',
output = TRUE,
imagetype="png",
height = 2500,
width = 6000,
resolution = 300,
fill=c("darkseagreen2", "coral1"), #, "goldenrod"
main.cex = 1.5,
sub.cex = 1.5,
cat.cex = 1.5,
cex = 1.5,
cat.default.pos = "outer",
#cat.pos = c(-27, 27, 135, 135, 27),
#cat.dist = c(0.055, 0.055, 0.055, 0.055, 0.055),
main = "",
scaled = FALSE)
#cat.pos = c(0, 0),
library(ggplot2)
library(scales)
library(dplyr)
library(plyr)
setwd("~/Documents/Rprojects/postdoc\ Rprojects/ODU_postdoc_Rprojects/Paper_Ojo_gene-expression/Porites_astreoides/symbiont/")
# import data
de.genes <- readRDS("Past_Sym_DE_genes_OO_LO_padj.1.rds")
# add group pairwise contrast label
de.genes$group <- 'OO-LO'
de.genes$group <- as.factor(de.genes$group)
de.genes$LFC <- ifelse(de.genes$log2FoldChange>0, 'Up', 'Down')
de.genes$LFC <- as.factor(de.genes$LFC)
summary_DEG <- de.genes %>% dplyr::count(group, LFC)
summary_DEG$LFC <- factor(summary_DEG$LFC, levels = c("Up", "Down"))
summary_DEG[1,3] <- summary_DEG[1,3]*(-1)
summary_DEG_2 <- summary_DEG
summary_DEG_2
# import data
de.genes <- readRDS("Past_Sym_DE_genes_LO_LC_padj.1.rds")
# add group pairwise contrast label
de.genes$group <- 'LO-LC'
de.genes$group <- as.factor(de.genes$group)
de.genes$LFC <- ifelse(de.genes$log2FoldChange>0, 'Up', 'Down')
de.genes$LFC <- as.factor(de.genes$LFC)
summary_DEG <- de.genes %>% dplyr::count(group, LFC)
summary_DEG$LFC <- factor(summary_DEG$LFC, levels = c("Up", "Down"))
summary_DEG[1,3] <- summary_DEG[1,3]*(-1)
summary_DEG_3a <- summary_DEG
summary_DEG_3b <- data.frame("group" = "LO_LC", "LFC" = "Up", "n" = 0)
summary_DEG_3 <- rbind(summary_DEG_3a, summary_DEG_3b)
summary_DEG_3[sapply(summary_DEG_3, is.character)] <- lapply(summary_DEG_3[sapply(summary_DEG_3, is.character)], as.factor)
summary_DEG_3
# import data
de.genes <- readRDS("Past_Sym_DE_genes_OO_OC_padj.1.rds")
# add group pairwise contrast label
de.genes$group <- 'OO-OC'
de.genes$group <- as.factor(de.genes$group)
de.genes$LFC <- ifelse(de.genes$log2FoldChange>0, 'Up', 'Down')
de.genes$LFC <- as.factor(de.genes$LFC)
summary_DEG <- de.genes %>% dplyr::count(group, LFC)
summary_DEG$LFC <- factor(summary_DEG$LFC, levels = c("Up", "Down"))
summary_DEG[1,3] <- summary_DEG[1,3]*(-1)
summary_DEG_4 <- summary_DEG
summary_DEG_4
summary2 <- rbind(summary_DEG_2, summary_DEG_3, summary_DEG_4)
summary2
summary2$Destination <- c("Ojo", "Ojo", "Ojo vs. Control", "Ojo vs. Control", "Ojo vs. Control", "Ojo vs. Control")
summary2$Destination <- as.factor(summary2$Destination)
summary2$Destination <- factor(summary2$Destination, levels = c("Control", "Ojo", "Ojo vs. Control"))
summary2
plot.combo <- ggplot(summary2, aes(x = group, fill = LFC)) +
facet_wrap(~Destination, scales = "free_x") +
geom_bar(data=subset(summary2, LFC=="Up"), aes(y=n, fill = LFC), stat = "identity", width=0.6) + #, binwidth=0
geom_bar(data=subset(summary2, LFC=="Down"), aes(y=n, fill = LFC), stat = "identity", width=0.6) + #, binwidth=0
geom_text(data=subset(summary2, LFC=="Up"), aes(group, n, label = n), position = position_dodge(width=0.9), vjust = -0.5) +
geom_text(data=subset(summary2, LFC=="Down"), aes(group, n, label = -n), position = position_dodge(width=0.9), vjust = 1.5) +
scale_fill_manual("LFC", values=c("black", "#56B4E9"), labels=c("Down-regulated", "Up-regulated"), guide=guide_legend(reverse=TRUE)) + #colorblind friendly
ylab("Differentially expressed genes") +
xlab("Transplantation") +
scale_y_continuous(limits = c(-650, 620), breaks = seq(-600, 600, by = 200)) +
theme_classic() +
theme(legend.position = c(0.2, 0.18), panel.background = element_rect(colour = "black"), axis.text.x = element_text(angle = 45, vjust = 0.5))
#legend.position = "bottom",
#axis.text.x=element_text(vjust=0.5, size=10, face="italic"),
plot.combo
# save plot
ggsave("Past_Sym_DEG_barplot_withLOLC.pdf", plot = plot.combo,  width = 4.2, height = 4, units = "in", dpi = 1200) #width = 6.5, height = 4.5
View(LO_LC.down)
View(LO_LC.up)
View(OO_LO.up)
View(OO_LO.down)
View(OO_OC.up)
View(OO_OC.down)
View(OO_OC.up)
View(OO_LO.up)
venn.diagram(x = list(OO_LO.up$gene, OO_OC.up$gene),
category.names = c("", ""),
filename = 'Past_Host_venn_up_2way.png',
output = TRUE,
imagetype="png",
height = 2500,
width = 6000,
resolution = 300,
fill=c("cadetblue2", "coral1"), #, "goldenrod"
main.cex = 1.5,
sub.cex = 1.5,
cat.cex = 1.5,
cex = 1.5,
cat.default.pos = "outer",
#cat.pos = c(-27, 27, 135, 135, 27),
#cat.dist = c(0.055, 0.055, 0.055, 0.055, 0.055),
main = "",
scaled = FALSE)
#cat.pos = c(0, 0),
venn.diagram(x = list(OO_LO.up$gene, OO_OC.up$gene),
category.names = c("", ""),
filename = 'Past_Host_venn_up_2way.png',
output = TRUE,
imagetype="png",
height = 2500,
width = 3000,
resolution = 300,
fill=c("cadetblue2", "coral1"), #, "goldenrod"
main.cex = 1.5,
sub.cex = 1.5,
cat.cex = 1.5,
cex = 1.5,
cat.default.pos = "outer",
#cat.pos = c(-27, 27, 135, 135, 27),
#cat.dist = c(0.055, 0.055, 0.055, 0.055, 0.055),
main = "",
scaled = FALSE)
#cat.pos = c(0, 0),
rm(list=ls())
library(DESeq2)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(plyr)
library(data.table)
library(cowplot)
library(vegan)
library(RColorBrewer)
#library(devtools)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
# cite: Martinez Arbizu, P. (2020). pairwiseAdonis: Pairwise multilevel comparison using adonis. R package version 0.4
# https://github.com/katiejolly/nationalparkcolors
#devtools::install_github("katiejolly/nationalparkcolors")
library(nationalparkcolors) #palettes
names(park_palettes)
# check palette
pal <- park_palette("Arches")
pal
# select palette
chosen.palette <- palette(park_palette("Arches")) #BlueRidgePkwy
alt.palette <- c("#8c510a", "#d8b365", "#f6e8c3", "#c7eae5", "#5ab4ac", "#01665e")
setwd("~/Documents/Rprojects/postdoc\ Rprojects/ODU_postdoc_Rprojects/Paper_Ojo_gene-expression/Porites_astreoides/symbiont/")
meta <- read.csv("~/Documents/Rprojects/postdoc\ Rprojects/ODU_postdoc_Rprojects/Paper_Ojo_gene-expression/Porites_astreoides/P_astreoides_Year-2_metadata.csv", header=TRUE, row.names=1)
# Remove all samples that were transplanted to the Destination Ojo.Norte
# There is no control site for Norte Ojo
# For now, we are focused on samples transplanted to Laja Control or Laja Ojo sites
# This is consistent with analyses for the other 2 species in the experiment
# Also, group sample size is too small for Ojo.Norte destination
meta <- subset(meta, Destination_name != "Ojo.Norte")
meta$Destination_type <- revalue(meta$Destination_type, c("control" = "Control", "ojo" = "Ojo"))
meta$Origin_type <- revalue(meta$Origin_type, c("control" = "Lagoon", "ojo" = "Ojo"))
meta <- meta %>% unite(group, Origin_type, Destination_type, sep = ".", remove = FALSE)
meta[sapply(meta, is.character)] <- lapply(meta[sapply(meta, is.character)],
as.factor)
# Colony_ID is equivalent to genotype
meta$Colony_ID <- as.factor(meta$Colony_ID)
meta <- meta %>% unite(colony_sample, Origin_type, Destination_type, Colony_ID, id, sep = ".", remove = FALSE)
levels(meta$group)
meta <- dplyr::select(meta, Colony_ID, group, Origin_name, Origin_type, Destination_name, Destination_type, pH_Destination, colony_sample)
drop <- c("NC_292_La_Pa_yr2", "NC_320_La_Pa_yr2", "NC_311_La_Pa_yr2")
meta <- meta[!(row.names(meta) %in% drop),]
meta <- droplevels(meta)
dim(meta)
meta %>%
group_by(group) %>%
dplyr::summarise(count = n())
norm.genes <- readRDS(file = "counts_normalized_Past_Sym.rds")
norm.genes <- as.data.frame.array(norm.genes)
all(colnames(norm.genes) %in% rownames(meta))
all(colnames(norm.genes) == rownames(meta))
# If your data did not match, you could use the match() function to rearrange them to be matching.
counts.transformed.vst <- readRDS(file = "counts_vst.BlindFalse_Past_Sym.rds")
de.genes.LO_LC <- readRDS(file = "Past_Sym_LO_LC_pval.05.rds")
de.genes.LO_LC <- as.data.frame(de.genes.LO_LC)
dim(de.genes.LO_LC)
de.genes.OO_LO <- readRDS(file = "Past_Sym_OO_LO_pval.05.rds")
de.genes.OO_LO <- as.data.frame(de.genes.OO_LO)
dim(de.genes.OO_LO)
de.genes.OO_OC <- readRDS(file = "Past_Sym_OO_OC_pval.05.rds")
de.genes.OO_OC <- as.data.frame(de.genes.OO_OC)
dim(de.genes.OO_OC)
de.genes.OC_LC <- readRDS(file = "Past_Sym_OC_LC_pval.05.rds")
de.genes.OC_LC <- as.data.frame(de.genes.OC_LC)
dim(de.genes.OC_LC)
# extract row names from DE gene list
rownames(de.genes.LO_LC) <- de.genes.LO_LC[,1]
sigChanges <- rownames(de.genes.LO_LC)[de.genes.LO_LC$pvalue < 0.05 & !is.na(de.genes.LO_LC$pvalue)]
counts_de <- counts.transformed.vst[rownames(counts.transformed.vst) %in% sigChanges,]
dim(counts_de)
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Lagoon-Ojo vs. Lagoon-Control (602 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
# extract row names from DE gene list
rownames(de.genes.LO_LC) <- de.genes.LO_LC[,1]
sigChanges <- rownames(de.genes.LO_LC)[de.genes.LO_LC$pvalue < 0.05 & !is.na(de.genes.LO_LC$pvalue)]
# select relevant sample columns for the given pairwise comparison
colnames(counts.transformed.vst)
counts_de <- counts.transformed.vst[,c(1:9,17:21)]
counts_de <- counts_de[rownames(counts.transformed.vst) %in% sigChanges,]
dim(counts_de)
# save plot
#pdf("Past_Sym_PCA_LO_LC_subset.pdf")
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Lagoon-Ojo vs. Lagoon-Control (602 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
#dev.off()
# save plot
pdf("Past_Sym_PCA_LO_LC_subset.pdf")
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Lagoon-Ojo vs. Lagoon-Control (602 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
dev.off()
# save plot
#pdf("Past_Sym_PCA_LO_LC_subset.pdf")
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Lagoon-Ojo vs. Lagoon-Control (602 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
#dev.off()
dim(counts_de)
dim(de.genes.LO_LC)
colnames(counts_de)
# extract row names from DE gene list
rownames(de.genes.OO_OC) <- de.genes.OO_OC[,1]
sigChanges <- rownames(de.genes.OO_OC)[de.genes.OO_OC$pvalue < 0.05 & !is.na(de.genes.OO_OC$pvalue)]
counts_de <- counts.transformed.vst[rownames(counts.transformed.vst) %in% sigChanges,]
dim(counts_de)
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Ojo-Ojo vs. Ojo-Control (773 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
# extract row names from DE gene list
rownames(de.genes.OO_OC) <- de.genes.OO_OC[,1]
sigChanges <- rownames(de.genes.OO_OC)[de.genes.OO_OC$pvalue < 0.05 & !is.na(de.genes.OO_OC$pvalue)]
# select relevant sample columns for the given pairwise comparison
colnames(counts.transformed.vst)
counts_de <- counts.transformed.vst[,c(10:16,22:29)]
counts_de <- counts_de[rownames(counts.transformed.vst) %in% sigChanges,]
dim(counts_de)
# save plot
pdf("Past_Sym_PCA_OO_OC_subset.pdf")
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Ojo-Ojo vs. Ojo-Control (773 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
dev.off()
dim(counts_de)
dim(de.genes.OO_OC)
colnames(counts_de)
# extract row names from DE gene list
rownames(de.genes.OC_LC) <- de.genes.OC_LC[,1]
sigChanges <- rownames(de.genes.OC_LC)[de.genes.OC_LC$pvalue < 0.05 & !is.na(de.genes.OC_LC$pvalue)]
counts_de <- counts.transformed.vst[rownames(counts.transformed.vst) %in% sigChanges,]
dim(counts_de)
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Ojo-Control vs. Lagoon-Control (305 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
# extract row names from DE gene list
rownames(de.genes.OC_LC) <- de.genes.OC_LC[,1]
sigChanges <- rownames(de.genes.OC_LC)[de.genes.OC_LC$pvalue < 0.05 & !is.na(de.genes.OC_LC$pvalue)]
# select relevant sample columns for the given pairwise comparison
colnames(counts.transformed.vst)
counts_de <- counts.transformed.vst[,c(1:9,22:29)]
counts_de <- counts_de[rownames(counts.transformed.vst) %in% sigChanges,]
dim(counts_de)
# save plot
pdf("Past_Sym_PCA_OC_LC_subset.pdf")
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Ojo-Control vs. Lagoon-Control (305 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
dev.off()
dim(counts_de)
dim(de.genes.OC_LC)
colnames(counts_de)
# extract row names from DE gene list
rownames(de.genes.OO_LO) <- de.genes.OO_LO[,1]
sigChanges <- rownames(de.genes.OO_LO)[de.genes.OO_LO$pvalue < 0.05 & !is.na(de.genes.OO_LO$pvalue)]
counts_de <- counts.transformed.vst[rownames(counts.transformed.vst) %in% sigChanges,]
dim(counts_de)
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Ojo-Ojo vs. Lagoon-Ojo (380 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
# extract row names from DE gene list
rownames(de.genes.OO_LO) <- de.genes.OO_LO[,1]
sigChanges <- rownames(de.genes.OO_LO)[de.genes.OO_LO$pvalue < 0.05 & !is.na(de.genes.OO_LO$pvalue)]
# select relevant sample columns for the given pairwise comparison
colnames(counts.transformed.vst)
counts_de <- counts.transformed.vst[,c(10:21)]
counts_de <- counts_de[rownames(counts.transformed.vst) %in% sigChanges,]
dim(counts_de)
# save plot
pdf("Past_Sym_PCA_OO_LO_subset.pdf")
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Ojo-Ojo vs. Lagoon-Ojo (380 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
dev.off()
# save plot
#pdf("Past_Sym_PCA_OO_LO_subset.pdf")
pcadata = DESeq2::plotPCA(counts_de, intgroup = c("group"), returnData = TRUE)
percentVar = round(100 * attr(pcadata, "percentVar"))
pca = prcomp(t(assay(counts_de)), center = TRUE, scale. = FALSE)
plot <- DESeq2::plotPCA(counts_de, returnData = TRUE, intgroup = c("group")) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point(aes(color = group), size = 1.3) +
stat_ellipse(geom = "polygon", alpha = 1/10, aes(fill = group)) +
scale_color_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) + #chosen.palette
scale_fill_manual(values = c("dodgerblue", "gold2", "#163343", "firebrick", "forestgreen", "bisque3")) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
labs(title = "Ojo-Ojo vs. Lagoon-Ojo (380 genes)") +
labs(color = "Origin.Destination", fill = "Origin.Destination") +
theme_cowplot()
plot
#dev.off()
dim(counts_de)
dim(de.genes.OO_LO)
colnames(counts_de)
rm(list=ls())
